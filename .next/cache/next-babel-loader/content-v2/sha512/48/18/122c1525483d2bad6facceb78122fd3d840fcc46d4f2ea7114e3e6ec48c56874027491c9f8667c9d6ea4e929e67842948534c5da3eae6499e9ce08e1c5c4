{"ast":null,"code":"import dbconnect from \"../../../mongoose/mongoose\";\nimport graph from \"../../../mongoose/models/graph\";\nimport form from \"../../../mongoose/models/form\";\ndbconnect();\n\nconst getgraph = async (data, id) => {\n  const newdata = [];\n  return newdata;\n};\n\nconst handlegraphshape = async (id, res) => {\n  const data = await form.find({\n    _id: id\n  }).exec();\n  return data;\n};\n\nexport default (async (req, res) => {\n  const {\n    method,\n    query\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      try {\n        const data = await handlegraphshape(query.id);\n        const newdata = [];\n\n        for (let i = 0; i < data[0].tools.length; i++) {\n          const tool = data[0].tools[i];\n          await graph.find({\n            formId: id,\n            ques: tool.label\n          }).exec((err, result) => {\n            newdata.push({\n              label: tool.label,\n              options: result\n            });\n          });\n        }\n\n        res.json(newdata);\n      } catch (error) {\n        console.log(\"err\", error);\n        res.status(404).json({\n          sucees: false\n        });\n      }\n\n      break;\n\n    default:\n      break;\n  }\n});","map":{"version":3,"sources":["D:/upwork projects/New folder (4)/form-projet-finale/pages/api/findgraph/[id].js"],"names":["dbconnect","graph","form","getgraph","data","id","newdata","handlegraphshape","res","find","_id","exec","req","method","query","i","tools","length","tool","formId","ques","label","err","result","push","options","json","error","console","log","status","sucees"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACAF,SAAS;;AAET,MAAMG,QAAQ,GAAG,OAAOC,IAAP,EAAaC,EAAb,KAAoB;AACpC,QAAMC,OAAO,GAAG,EAAhB;AAEA,SAAOA,OAAP;AACA,CAJD;;AAMA,MAAMC,gBAAgB,GAAG,OAAOF,EAAP,EAAWG,GAAX,KAAmB;AAC3C,QAAMJ,IAAI,GAAG,MAAMF,IAAI,CAACO,IAAL,CAAU;AAAEC,IAAAA,GAAG,EAAEL;AAAP,GAAV,EAAuBM,IAAvB,EAAnB;AAEA,SAAOP,IAAP;AACA,CAJD;;AAMA,gBAAe,OAAOQ,GAAP,EAAYJ,GAAZ,KAAoB;AAClC,QAAM;AAAEK,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBF,GAA1B;;AACA,UAAQC,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACH,cAAMT,IAAI,GAAG,MAAMG,gBAAgB,CAACO,KAAK,CAACT,EAAP,CAAnC;AAEA,cAAMC,OAAO,GAAG,EAAhB;;AACA,aAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAAI,CAAC,CAAD,CAAJ,CAAQY,KAAR,CAAcC,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;AAC9C,gBAAMG,IAAI,GAAGd,IAAI,CAAC,CAAD,CAAJ,CAAQY,KAAR,CAAcD,CAAd,CAAb;AACA,gBAAMd,KAAK,CACTQ,IADI,CACC;AAAEU,YAAAA,MAAM,EAAEd,EAAV;AAAce,YAAAA,IAAI,EAAEF,IAAI,CAACG;AAAzB,WADD,EAEJV,IAFI,CAEC,CAACW,GAAD,EAAMC,MAAN,KAAiB;AACtBjB,YAAAA,OAAO,CAACkB,IAAR,CAAa;AAAEH,cAAAA,KAAK,EAAEH,IAAI,CAACG,KAAd;AAAqBI,cAAAA,OAAO,EAAEF;AAA9B,aAAb;AACA,WAJI,CAAN;AAKA;;AAEDf,QAAAA,GAAG,CAACkB,IAAJ,CAASpB,OAAT;AACA,OAdD,CAcE,OAAOqB,KAAP,EAAc;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB;AACAnB,QAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAAEK,UAAAA,MAAM,EAAE;AAAV,SAArB;AACA;;AACD;;AAED;AACC;AAvBF;AAyBA,CA3BD","sourcesContent":["import dbconnect from \"../../../mongoose/mongoose\";\r\nimport graph from \"../../../mongoose/models/graph\";\r\nimport form from \"../../../mongoose/models/form\";\r\ndbconnect();\r\n\r\nconst getgraph = async (data, id) => {\r\n\tconst newdata = [];\r\n\r\n\treturn newdata;\r\n};\r\n\r\nconst handlegraphshape = async (id, res) => {\r\n\tconst data = await form.find({ _id: id }).exec();\r\n\r\n\treturn data;\r\n};\r\n\r\nexport default async (req, res) => {\r\n\tconst { method, query } = req;\r\n\tswitch (method) {\r\n\t\tcase \"GET\":\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await handlegraphshape(query.id);\r\n\r\n\t\t\t\tconst newdata = [];\r\n\t\t\t\tfor (let i = 0; i < data[0].tools.length; i++) {\r\n\t\t\t\t\tconst tool = data[0].tools[i];\r\n\t\t\t\t\tawait graph\r\n\t\t\t\t\t\t.find({ formId: id, ques: tool.label })\r\n\t\t\t\t\t\t.exec((err, result) => {\r\n\t\t\t\t\t\t\tnewdata.push({ label: tool.label, options: result });\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tres.json(newdata);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"err\", error);\r\n\t\t\t\tres.status(404).json({ sucees: false });\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}