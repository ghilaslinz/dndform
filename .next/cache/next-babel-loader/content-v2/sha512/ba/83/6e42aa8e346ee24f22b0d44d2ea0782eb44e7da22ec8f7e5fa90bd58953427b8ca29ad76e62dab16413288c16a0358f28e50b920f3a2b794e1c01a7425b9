{"ast":null,"code":"import dbconnect from \"../../../mongoose/mongoose\";\nimport graph from \"../../../mongoose/models/graph\";\nimport form from \"../../../mongoose/models/form\";\ndbconnect();\n\nconst handlegraphshape = id => {\n  let newdata = [];\n  const alreadygot = [];\n  form.find({\n    _id: id\n  }).exec((err, resul) => {\n    console.log(resul.tools);\n  });\n};\n\nexport default (async (req, res) => {\n  const {\n    method,\n    query\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      try {\n        handlegraphshape(query.id);\n      } catch (error) {\n        console.log(\"err\", error);\n        res.status(404).json({\n          sucees: false\n        });\n      }\n\n      break;\n\n    default:\n      break;\n  }\n});","map":{"version":3,"sources":["D:/upwork projects/New folder (4)/form-projet-finale/pages/api/findgraph/[id].js"],"names":["dbconnect","graph","form","handlegraphshape","id","newdata","alreadygot","find","_id","exec","err","resul","console","log","tools","req","res","method","query","error","status","json","sucees"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACAF,SAAS;;AAET,MAAMG,gBAAgB,GAAIC,EAAD,IAAQ;AAChC,MAAIC,OAAO,GAAG,EAAd;AACA,QAAMC,UAAU,GAAG,EAAnB;AAEAJ,EAAAA,IAAI,CAACK,IAAL,CAAU;AAAEC,IAAAA,GAAG,EAAEJ;AAAP,GAAV,EAAuBK,IAAvB,CAA4B,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AACA,GAFD;AAGA,CAPD;;AASA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBH,GAA1B;;AACA,UAAQE,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACHd,QAAAA,gBAAgB,CAACe,KAAK,CAACd,EAAP,CAAhB;AACA,OAFD,CAEE,OAAOe,KAAP,EAAc;AACfP,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBM,KAAnB;AACAH,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAArB;AACA;;AACD;;AAED;AACC;AAXF;AAaA,CAfD","sourcesContent":["import dbconnect from \"../../../mongoose/mongoose\";\r\nimport graph from \"../../../mongoose/models/graph\";\r\nimport form from \"../../../mongoose/models/form\";\r\ndbconnect();\r\n\r\nconst handlegraphshape = (id) => {\r\n\tlet newdata = [];\r\n\tconst alreadygot = [];\r\n\r\n\tform.find({ _id: id }).exec((err, resul) => {\r\n\t\tconsole.log(resul.tools);\r\n\t});\r\n};\r\n\r\nexport default async (req, res) => {\r\n\tconst { method, query } = req;\r\n\tswitch (method) {\r\n\t\tcase \"GET\":\r\n\t\t\ttry {\r\n\t\t\t\thandlegraphshape(query.id);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"err\", error);\r\n\t\t\t\tres.status(404).json({ sucees: false });\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}