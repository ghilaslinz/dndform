{"ast":null,"code":"import dbconnect from \"../../../mongoose/mongoose\";\nimport graph from \"../../../mongoose/models/graph\";\nimport form from \"../../../mongoose/models/form\";\ndbconnect();\n\nconst handlegraphshape = async id => {\n  const newdata = [];\n  const data = await form.find({\n    _id: id\n  }).exec();\n  const s = data[0].tools.forEach(obj => {\n    graph.find({\n      formId: id,\n      ques: obj.label\n    }).exec((err, result) => {\n      newdata.push({\n        label: obj.label,\n        options: result\n      });\n    });\n  });\n  res.json(newdata);\n};\n\nexport default (async (req, res) => {\n  const {\n    method,\n    query\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      try {\n        await handlegraphshape(query.id, res);\n      } catch (error) {\n        console.log(\"err\", error);\n        res.status(404).json({\n          sucees: false\n        });\n      }\n\n      break;\n\n    default:\n      break;\n  }\n});","map":{"version":3,"sources":["D:/upwork projects/New folder (4)/form-projet-finale/pages/api/findgraph/[id].js"],"names":["dbconnect","graph","form","handlegraphshape","id","newdata","data","find","_id","exec","s","tools","forEach","obj","formId","ques","label","err","result","push","options","res","json","req","method","query","error","console","log","status","sucees"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACAF,SAAS;;AAET,MAAMG,gBAAgB,GAAG,MAAOC,EAAP,IAAc;AACtC,QAAMC,OAAO,GAAG,EAAhB;AAEA,QAAMC,IAAI,GAAG,MAAMJ,IAAI,CAACK,IAAL,CAAU;AAAEC,IAAAA,GAAG,EAAEJ;AAAP,GAAV,EAAuBK,IAAvB,EAAnB;AAEA,QAAMC,CAAC,GAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,KAAR,CAAcC,OAAd,CAAuBC,GAAD,IAAS;AACxCZ,IAAAA,KAAK,CAACM,IAAN,CAAW;AAAEO,MAAAA,MAAM,EAAEV,EAAV;AAAcW,MAAAA,IAAI,EAAEF,GAAG,CAACG;AAAxB,KAAX,EAA4CP,IAA5C,CAAiD,CAACQ,GAAD,EAAMC,MAAN,KAAiB;AACjEb,MAAAA,OAAO,CAACc,IAAR,CAAa;AAAEH,QAAAA,KAAK,EAAEH,GAAG,CAACG,KAAb;AAAoBI,QAAAA,OAAO,EAAEF;AAA7B,OAAb;AACA,KAFD;AAGA,GAJS,CAAV;AAMAG,EAAAA,GAAG,CAACC,IAAJ,CAASjB,OAAT;AACA,CAZD;;AAcA,gBAAe,OAAOkB,GAAP,EAAYF,GAAZ,KAAoB;AAClC,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBF,GAA1B;;AACA,UAAQC,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACH,cAAMrB,gBAAgB,CAACsB,KAAK,CAACrB,EAAP,EAAWiB,GAAX,CAAtB;AACA,OAFD,CAEE,OAAOK,KAAP,EAAc;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB;AACAL,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBP,IAAhB,CAAqB;AAAEQ,UAAAA,MAAM,EAAE;AAAV,SAArB;AACA;;AACD;;AAED;AACC;AAXF;AAaA,CAfD","sourcesContent":["import dbconnect from \"../../../mongoose/mongoose\";\r\nimport graph from \"../../../mongoose/models/graph\";\r\nimport form from \"../../../mongoose/models/form\";\r\ndbconnect();\r\n\r\nconst handlegraphshape = async (id) => {\r\n\tconst newdata = [];\r\n\r\n\tconst data = await form.find({ _id: id }).exec();\r\n\r\n\tconst s = data[0].tools.forEach((obj) => {\r\n\t\tgraph.find({ formId: id, ques: obj.label }).exec((err, result) => {\r\n\t\t\tnewdata.push({ label: obj.label, options: result });\r\n\t\t});\r\n\t});\r\n\r\n\tres.json(newdata);\r\n};\r\n\r\nexport default async (req, res) => {\r\n\tconst { method, query } = req;\r\n\tswitch (method) {\r\n\t\tcase \"GET\":\r\n\t\t\ttry {\r\n\t\t\t\tawait handlegraphshape(query.id, res);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"err\", error);\r\n\t\t\t\tres.status(404).json({ sucees: false });\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}