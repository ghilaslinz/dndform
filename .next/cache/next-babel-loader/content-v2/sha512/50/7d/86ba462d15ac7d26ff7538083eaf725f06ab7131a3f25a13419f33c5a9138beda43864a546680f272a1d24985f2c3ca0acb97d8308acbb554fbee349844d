{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\upwork projects\\\\New folder (4)\\\\form-projet-finale\\\\components\\\\grapgComponent.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar React = require(\"react\");\n\nvar Component = React.Component;\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass GraphComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light2\",\n      title: {\n        text: \"total votes\"\n      },\n      axisY: {\n        title: \"Vote\"\n      },\n      axisX: {\n        title: \"options\",\n        interval: 2\n      },\n      data: [{\n        type: \"line\",\n        dataPoints: []\n      }]\n    });\n\n    _defineProperty(this, \"getdata\", data => {\n      const datas = [];\n      data.forEach(obj => {\n        datas.push({\n          x: obj.text,\n          y: obj.count\n        });\n      });\n    });\n  }\n\n  componentWillMount() {\n    const datas = this.getdata(this.props.data);\n    this.setState({\n      data: {\n        type: \"line\",\n        dataPoints: datas\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: this.state\n        /* onRef={ref => this.chart = ref} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default GraphComponent;","map":{"version":3,"sources":["D:/upwork projects/New folder (4)/form-projet-finale/components/grapgComponent.js"],"names":["React","require","Component","CanvasJSReact","CanvasJS","CanvasJSChart","GraphComponent","animationEnabled","exportEnabled","theme","title","text","axisY","axisX","interval","data","type","dataPoints","datas","forEach","obj","push","x","y","count","componentWillMount","getdata","props","setState","render","state"],"mappings":";;;;;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;;AACA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC9B;AACPK,MAAAA,gBAAgB,EAAE,IADX;AAEPC,MAAAA,aAAa,EAAE,IAFR;AAGPC,MAAAA,KAAK,EAAE,QAHA;AAIPC,MAAAA,KAAK,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OAJA;AAOPC,MAAAA,KAAK,EAAE;AACNF,QAAAA,KAAK,EAAE;AADD,OAPA;AAUPG,MAAAA,KAAK,EAAE;AACNH,QAAAA,KAAK,EAAE,SADD;AAGNI,QAAAA,QAAQ,EAAE;AAHJ,OAVA;AAePC,MAAAA,IAAI,EAAE,CACL;AACCC,QAAAA,IAAI,EAAE,MADP;AAECC,QAAAA,UAAU,EAAE;AAFb,OADK;AAfC,KAD8B;;AAAA,qCAuB3BF,IAAD,IAAU;AACnB,YAAMG,KAAK,GAAG,EAAd;AAEAH,MAAAA,IAAI,CAACI,OAAL,CAAcC,GAAD,IAAS;AACrBF,QAAAA,KAAK,CAACG,IAAN,CAAW;AAAEC,UAAAA,CAAC,EAAEF,GAAG,CAACT,IAAT;AAAeY,UAAAA,CAAC,EAAEH,GAAG,CAACI;AAAtB,SAAX;AACA,OAFD;AAGA,KA7BqC;AAAA;;AA+BtCC,EAAAA,kBAAkB,GAAG;AACpB,UAAMP,KAAK,GAAG,KAAKQ,OAAL,CAAa,KAAKC,KAAL,CAAWZ,IAAxB,CAAd;AAEA,SAAKa,QAAL,CAAc;AACbb,MAAAA,IAAI,EAAE;AACLC,QAAAA,IAAI,EAAE,MADD;AAELC,QAAAA,UAAU,EAAEC;AAFP;AADO,KAAd;AAMA;;AACDW,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,6BACC,QAAC,aAAD;AACC,QAAA,OAAO,EAAE,KAAKC;AACd;;AAFD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAnDqC;;AAqDvC,eAAexB,cAAf","sourcesContent":["var React = require(\"react\");\r\nvar Component = React.Component;\r\nimport CanvasJSReact from \"./canvasjs.react\";\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\nclass GraphComponent extends Component {\r\n\tstate = {\r\n\t\tanimationEnabled: true,\r\n\t\texportEnabled: true,\r\n\t\ttheme: \"light2\",\r\n\t\ttitle: {\r\n\t\t\ttext: \"total votes\",\r\n\t\t},\r\n\t\taxisY: {\r\n\t\t\ttitle: \"Vote\",\r\n\t\t},\r\n\t\taxisX: {\r\n\t\t\ttitle: \"options\",\r\n\r\n\t\t\tinterval: 2,\r\n\t\t},\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdataPoints: [],\r\n\t\t\t},\r\n\t\t],\r\n\t};\r\n\tgetdata = (data) => {\r\n\t\tconst datas = [];\r\n\r\n\t\tdata.forEach((obj) => {\r\n\t\t\tdatas.push({ x: obj.text, y: obj.count });\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentWillMount() {\r\n\t\tconst datas = this.getdata(this.props.data);\r\n\r\n\t\tthis.setState({\r\n\t\t\tdata: {\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdataPoints: datas,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<CanvasJSChart\r\n\t\t\t\t\toptions={this.state}\r\n\t\t\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t\t/>\r\n\t\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default GraphComponent;\r\n"]},"metadata":{},"sourceType":"module"}