{"ast":null,"code":"import dbconnect from \"../../../mongoose/mongoose\";\nimport graph from \"../../../mongoose/models/graph\";\ndbconnect();\n\nconst handlegraphshap = data => {\n  let history = data;\n  const newdata = [];\n  let minusHistory;\n  let nextHistory;\n  data.forEach(ob => {\n    minusHistory = history.filter((obb, i) => {\n      ob.questionId === obb.questionId;\n    });\n    nextHistory = history.filter((obb, i) => {\n      ob.questionId !== obb.questionId;\n    });\n\n    if (minnusHistory.length) {\n      newdata.push(minusHistory);\n      history = nextHistory;\n    }\n  });\n  return newdata;\n};\n\nexport default (async (req, res) => {\n  const {\n    method,\n    query\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      try {\n        const data = await graph.find({\n          formId: query.id\n        });\n\n        if (data) {\n          console.log(handlegraphshape(\"datas\", data));\n        }\n      } catch (error) {\n        console.log(\"err\", error);\n        res.status(404).json({\n          sucees: false\n        });\n      }\n\n      break;\n\n    default:\n      break;\n  }\n});","map":{"version":3,"sources":["D:/upwork projects/New folder (4)/form-projet-finale/pages/api/findgraph/[id].js"],"names":["dbconnect","graph","handlegraphshap","data","history","newdata","minusHistory","nextHistory","forEach","ob","filter","obb","i","questionId","minnusHistory","length","push","req","res","method","query","find","formId","id","console","log","handlegraphshape","error","status","json","sucees"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACAD,SAAS;;AAET,MAAME,eAAe,GAAIC,IAAD,IAAU;AACjC,MAAIC,OAAO,GAAGD,IAAd;AACA,QAAME,OAAO,GAAG,EAAhB;AACA,MAAIC,YAAJ;AACA,MAAIC,WAAJ;AACAJ,EAAAA,IAAI,CAACK,OAAL,CAAcC,EAAD,IAAQ;AACpBH,IAAAA,YAAY,GAAGF,OAAO,CAACM,MAAR,CAAe,CAACC,GAAD,EAAMC,CAAN,KAAY;AACzCH,MAAAA,EAAE,CAACI,UAAH,KAAkBF,GAAG,CAACE,UAAtB;AACA,KAFc,CAAf;AAGAN,IAAAA,WAAW,GAAGH,OAAO,CAACM,MAAR,CAAe,CAACC,GAAD,EAAMC,CAAN,KAAY;AACxCH,MAAAA,EAAE,CAACI,UAAH,KAAkBF,GAAG,CAACE,UAAtB;AACA,KAFa,CAAd;;AAGA,QAAIC,aAAa,CAACC,MAAlB,EAA0B;AACzBV,MAAAA,OAAO,CAACW,IAAR,CAAaV,YAAb;AACAF,MAAAA,OAAO,GAAGG,WAAV;AACA;AACD,GAXD;AAYA,SAAOF,OAAP;AACA,CAlBD;;AAoBA,gBAAe,OAAOY,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBH,GAA1B;;AACA,UAAQE,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACH,cAAMhB,IAAI,GAAG,MAAMF,KAAK,CAACoB,IAAN,CAAW;AAAEC,UAAAA,MAAM,EAAEF,KAAK,CAACG;AAAhB,SAAX,CAAnB;;AACA,YAAIpB,IAAJ,EAAU;AACTqB,UAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAgB,CAAC,OAAD,EAAUvB,IAAV,CAA5B;AACA;AACD,OALD,CAKE,OAAOwB,KAAP,EAAc;AACfH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,KAAnB;AACAT,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAArB;AACA;;AACD;;AAED;AACC;AAdF;AAgBA,CAlBD","sourcesContent":["import dbconnect from \"../../../mongoose/mongoose\";\r\nimport graph from \"../../../mongoose/models/graph\";\r\ndbconnect();\r\n\r\nconst handlegraphshap = (data) => {\r\n\tlet history = data;\r\n\tconst newdata = [];\r\n\tlet minusHistory;\r\n\tlet nextHistory;\r\n\tdata.forEach((ob) => {\r\n\t\tminusHistory = history.filter((obb, i) => {\r\n\t\t\tob.questionId === obb.questionId;\r\n\t\t});\r\n\t\tnextHistory = history.filter((obb, i) => {\r\n\t\t\tob.questionId !== obb.questionId;\r\n\t\t});\r\n\t\tif (minnusHistory.length) {\r\n\t\t\tnewdata.push(minusHistory);\r\n\t\t\thistory = nextHistory;\r\n\t\t}\r\n\t});\r\n\treturn newdata;\r\n};\r\n\r\nexport default async (req, res) => {\r\n\tconst { method, query } = req;\r\n\tswitch (method) {\r\n\t\tcase \"GET\":\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await graph.find({ formId: query.id });\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tconsole.log(handlegraphshape(\"datas\", data));\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"err\", error);\r\n\t\t\t\tres.status(404).json({ sucees: false });\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}