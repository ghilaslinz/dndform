{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Nav from \"../../components/nav/nav\";\nimport { setUserLogedIn } from \"../../redax/user/useractions\";\nimport styles from \"../../styles/login.module.scss\";\nimport { useRouter } from \"next/router\";\n\nconst Login = ({\n  setUserLogedIn\n}) => {\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: pass,\n    1: setPass\n  } = useState(\"\");\n  const {\n    0: singup,\n    1: setSignup\n  } = useState(false);\n  const router = useRouter();\n\n  const handlelogin = async e => {\n    e.preventDefault();\n    const user = await fetch(\"http://localhost:3000/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify({\n        email,\n        pass\n      })\n    }).then(res => res.json());\n\n    if (user.data._id) {\n      setUserLogedIn(user.data);\n      router.push(\"/\");\n    }\n  };\n\n  const handlesignUp = async e => {\n    e.preventDefault();\n    const user = await fetch(\"http://localhost:3000/api/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        pass\n      })\n    }).then(res => res.json());\n\n    if (user.data._id) {\n      setUserLogedIn(user.data);\n      router.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Nav, {}), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.main,\n      children: singup ? /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: e => handlesignUp(e),\n        className: styles.form,\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          onChange: e => setName(e.target.value),\n          type: \"text\",\n          placeholder: \"Name\",\n          required: true\n        }), /*#__PURE__*/_jsx(\"input\", {\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          placeholder: \"Email\",\n          required: true\n        }), /*#__PURE__*/_jsx(\"input\", {\n          onChange: e => setPass(e.target.value),\n          type: \"password\",\n          placeholder: \"Password\",\n          required: true\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"button\", {\n          type: \"submit\",\n          children: \"SIGNUP\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          onClick: () => setSignup(!singup),\n          children: \"Already have an account? LOGIN\"\n        })]\n      }) : /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: e => handlelogin(e),\n        className: styles.form,\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          placeholder: \"Email\",\n          required: true\n        }), /*#__PURE__*/_jsx(\"input\", {\n          onChange: e => setPass(e.target.value),\n          type: \"password\",\n          placeholder: \"Password\",\n          required: true\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"button\", {\n          type: \"submit\",\n          children: \"LOGIN\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          onClick: () => setSignup(!singup),\n          children: \"don't have an account? SIGNUP\"\n        })]\n      })\n    })]\n  });\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setUserLogedIn: user => {\n      dispatch(setUserLogedIn(user));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":null,"metadata":{},"sourceType":"module"}