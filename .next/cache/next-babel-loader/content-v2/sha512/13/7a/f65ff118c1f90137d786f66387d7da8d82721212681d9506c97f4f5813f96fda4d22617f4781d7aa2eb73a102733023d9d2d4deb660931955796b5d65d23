{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from \"./actions-types\";\nconst INITIAL_STATE = {\n  products: [],\n  product: {}\n};\n\nconst productReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.setProducts:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        products: action.payload\n      });\n\n    case actionTypes.setProduct:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        product: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;","map":{"version":3,"sources":["D:/upwork projects/New folder (4)/form-projet-finale/redax/products/product-reducers.js"],"names":["actionTypes","INITIAL_STATE","products","product","productReducer","state","action","type","setProducts","payload","setProduct"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,QAAQ,EAAE,EADW;AAErBC,EAAAA,OAAO,EAAE;AAFY,CAAtB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,WAAW,CAACQ,WAAjB;AACC,6CAAYH,KAAZ;AAAmBH,QAAAA,QAAQ,EAAEI,MAAM,CAACG;AAApC;;AACD,SAAKT,WAAW,CAACU,UAAjB;AACC,6CAAYL,KAAZ;AAAmBF,QAAAA,OAAO,EAAEG,MAAM,CAACG;AAAnC;;AACD;AACC,aAAOJ,KAAP;AANF;AAQA,CATD;;AAWA,eAAeD,cAAf","sourcesContent":["import { actionTypes } from \"./actions-types\";\r\n\r\nconst INITIAL_STATE = {\r\n\tproducts: [],\r\n\tproduct: {},\r\n};\r\n\r\nconst productReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.setProducts:\r\n\t\t\treturn { ...state, products: action.payload };\r\n\t\tcase actionTypes.setProduct:\r\n\t\t\treturn { ...state, product: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default productReducer;\r\n"]},"metadata":{},"sourceType":"module"}