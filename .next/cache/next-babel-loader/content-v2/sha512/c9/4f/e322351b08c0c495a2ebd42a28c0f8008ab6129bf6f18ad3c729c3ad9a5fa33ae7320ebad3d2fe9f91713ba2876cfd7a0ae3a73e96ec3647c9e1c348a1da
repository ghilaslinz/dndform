{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"D:/upwork projects/New folder (4)/form-projet-finale/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/upwork projects/New folder (4)/form-projet-finale/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:/upwork projects/New folder (4)/form-projet-finale/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:/upwork projects/New folder (4)/form-projet-finale/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/upwork projects/New folder (4)/form-projet-finale/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/upwork projects/New folder (4)/form-projet-finale/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { ReactFormGenerator, ElementStore } from \"react-form-builder2\";\nimport { get, post } from \"../mongoose/requests\";\n\nvar Demobar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Demobar, _React$Component);\n\n  var _super = _createSuper(Demobar);\n\n  function Demobar(props) {\n    var _this;\n\n    _classCallCheck(this, Demobar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      previewVisible: false,\n      shortPreviewVisible: false,\n      roPreviewVisible: false\n    };\n    _this.submit = _this.onSubmit.bind(_assertThisInitialized(_this));\n\n    var update = _this.onChange.bind(_assertThisInitialized(_this));\n\n    ElementStore.subscribe(function (state) {\n      return update(state.data);\n    });\n    return _this;\n  }\n\n  _createClass(Demobar, [{\n    key: \"showPreview\",\n    value: function showPreview() {\n      this.setState({\n        previewVisible: true\n      });\n    }\n  }, {\n    key: \"showShortPreview\",\n    value: function showShortPreview() {\n      this.setState({\n        shortPreviewVisible: true\n      });\n    }\n  }, {\n    key: \"showRoPreview\",\n    value: function showRoPreview() {\n      this.setState({\n        roPreviewVisible: true\n      });\n    }\n  }, {\n    key: \"closePreview\",\n    value: function closePreview() {\n      this.setState({\n        previewVisible: false,\n        shortPreviewVisible: false,\n        roPreviewVisible: false\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(data) {\n      this.setState({\n        data: data\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(data) {\n      var postUrl = this.props.postUrl;\n      console.log(\"onSubmit\", data); // Place code to post json data to server here\n\n      post(postUrl, data).then(function (x) {\n        window.location.href = \"/\";\n      });\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var modalClass = \"modal\";\n\n      if (this.state.previewVisible) {\n        modalClass += \" show d-block\";\n      }\n\n      var shortModalClass = \"modal short-modal\";\n\n      if (this.state.shortPreviewVisible) {\n        shortModalClass += \" show d-block\";\n      }\n\n      var roModalClass = \"modal ro-modal\";\n\n      if (this.state.roPreviewVisible) {\n        roModalClass += \" show d-block\";\n      }\n\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"clearfix\",\n        style: {\n          margin: \"10px\",\n          width: \"70%\"\n        },\n        children: [/*#__PURE__*/_jsx(\"h4\", {\n          className: \"float-left\",\n          children: \"Preview\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          className: \"btn btn-primary float-right\",\n          style: {\n            marginRight: \"10px\"\n          },\n          onClick: this.showPreview.bind(this),\n          children: \"Preview Form\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          className: \"btn btn-default float-right\",\n          style: {\n            marginRight: \"10px\"\n          },\n          onClick: this.showShortPreview.bind(this),\n          children: \"Alternate/Short Form\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          className: \"btn btn-default float-right\",\n          style: {\n            marginRight: \"10px\"\n          },\n          onClick: this.showRoPreview.bind(this),\n          children: \"Read Only Form\"\n        }), this.state.previewVisible && /*#__PURE__*/_jsx(\"div\", {\n          className: modalClass,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"modal-dialog modal-lg\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"modal-content\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"modal-body\",\n                children: /*#__PURE__*/_jsx(ReactFormGenerator, {\n                  download_path: \"\",\n                  back_action: \"/\",\n                  back_name: \"Back\",\n                  answer_data: {},\n                  action_name: \"Save\",\n                  form_action: \"/\",\n                  form_method: \"POST\",\n                  onSubmit: this.submit,\n                  variables: this.props.variables,\n                  data: this.state.data\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"modal-footer\",\n                children: /*#__PURE__*/_jsx(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-default\",\n                  \"data-dismiss\": \"modal\",\n                  onClick: this.closePreview.bind(this),\n                  children: \"Close\"\n                })\n              })]\n            })\n          })\n        }), this.state.roPreviewVisible && /*#__PURE__*/_jsx(\"div\", {\n          className: roModalClass,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"modal-dialog modal-lg\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"modal-content\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"modal-body\",\n                children: /*#__PURE__*/_jsx(ReactFormGenerator, {\n                  download_path: \"\",\n                  back_action: \"/\",\n                  back_name: \"Back\",\n                  answer_data: {},\n                  action_name: \"Save\",\n                  form_action: \"/\",\n                  form_method: \"POST\",\n                  read_only: true,\n                  variables: this.props.variables,\n                  hide_actions: true,\n                  data: this.state.data\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"modal-footer\",\n                children: /*#__PURE__*/_jsx(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-default\",\n                  \"data-dismiss\": \"modal\",\n                  onClick: this.closePreview.bind(this),\n                  children: \"Close\"\n                })\n              })]\n            })\n          })\n        }), this.state.shortPreviewVisible && /*#__PURE__*/_jsx(\"div\", {\n          className: shortModalClass,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"modal-dialog modal-lg\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"modal-content\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"modal-body\",\n                children: /*#__PURE__*/_jsx(ReactFormGenerator, {\n                  download_path: \"\",\n                  back_action: \"\",\n                  answer_data: {},\n                  form_action: \"/\",\n                  form_method: \"POST\",\n                  data: this.state.data,\n                  display_short: true,\n                  variables: this.props.variables,\n                  hide_actions: false\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"modal-footer\",\n                children: /*#__PURE__*/_jsx(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-default\",\n                  \"data-dismiss\": \"modal\",\n                  onClick: this.closePreview.bind(this),\n                  children: \"Close\"\n                })\n              })]\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Demobar;\n}(React.Component);\n\nexport { Demobar as default };","map":null,"metadata":{},"sourceType":"module"}