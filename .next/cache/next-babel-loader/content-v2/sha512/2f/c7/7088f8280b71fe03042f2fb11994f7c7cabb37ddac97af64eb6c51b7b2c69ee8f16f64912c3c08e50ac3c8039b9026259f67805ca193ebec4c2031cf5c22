{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\upwork projects\\\\New folder (4)\\\\form-projet-finale\\\\pages\\\\graph\\\\[id].js\";\nimport React, { useEffect } from \"react\";\nimport GraphComponent from \"../../components/grapgComponent\";\n\nfunction Graph({\n  id\n}) {\n  const [data, setData] = useState();\n  useEffect(() => {\n    fetch(`http://localhost:3000/api/findgraph/${id}`).then(res => res.json()).then(json => setData(json));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && data.map(ob => {\n      /*#__PURE__*/\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: ob.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(GraphComponent, {\n          data: ob.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n}\n\nGraph.getInitialProps = async ({\n  query\n}) => {\n  const {\n    id\n  } = query;\n  return {\n    id: id\n  };\n};\n\nexport default Graph;","map":{"version":3,"sources":["D:/upwork projects/New folder (4)/form-projet-finale/pages/graph/[id].js"],"names":["React","useEffect","GraphComponent","Graph","id","data","setData","useState","fetch","then","res","json","map","ob","label","options","getInitialProps","query"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAuB;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,EAAhC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,KAAK,CAAE,uCAAsCJ,EAAG,EAA3C,CAAL,CACEK,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAEQE,IAAD,IAAUL,OAAO,CAACK,IAAD,CAFxB;AAGA,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACC;AAAA,cACEN,IAAI,IACJA,IAAI,CAACO,GAAL,CAAUC,EAAD,IAAQ;AAChB;AAAA;AAAA,gCACC;AAAA,oBAAKA,EAAE,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAED,EAAE,CAACE;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAIA,KALD;AAFF;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;AACDZ,KAAK,CAACa,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC5C,QAAM;AAAEb,IAAAA;AAAF,MAASa,KAAf;AAEA,SAAO;AAAEb,IAAAA,EAAE,EAAEA;AAAN,GAAP;AACA,CAJD;;AAMA,eAAeD,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport GraphComponent from \"../../components/grapgComponent\";\r\n\r\nfunction Graph({ id }) {\r\n\tconst [data, setData] = useState();\r\n\tuseEffect(() => {\r\n\t\tfetch(`http://localhost:3000/api/findgraph/${id}`)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((json) => setData(json));\r\n\t}, []);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{data &&\r\n\t\t\t\tdata.map((ob) => {\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h2>{ob.label}</h2>\r\n\t\t\t\t\t\t<GraphComponent data={ob.options} />\r\n\t\t\t\t\t</>;\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\nGraph.getInitialProps = async ({ query }) => {\r\n\tconst { id } = query;\r\n\r\n\treturn { id: id };\r\n};\r\n\r\nexport default Graph;\r\n"]},"metadata":{},"sourceType":"module"}