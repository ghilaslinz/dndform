{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { userActionTypes } from \"./userActionTypes\";\nconst INITIAL_STATE = {\n  User: {},\n  LogedIn: false\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userActionTypes.setUserLogedIn:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        User: action.payload,\n        LogedIn: !state.LogedIn\n      });\n\n    case userActionTypes.Logout:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        User: {},\n        LogedIn: !state.LogedIn\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["D:/upwork projects/New folder (4)/form-projet-finale/redax/user/userReducer.js"],"names":["userActionTypes","INITIAL_STATE","User","LogedIn","userReducer","state","action","type","setUserLogedIn","payload","Logout"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,mBAAhC;AAEA,MAAMC,aAAa,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,OAAO,EAAE;AAArB,CAAtB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,eAAe,CAACQ,cAArB;AACC,6CAAYH,KAAZ;AAAmBH,QAAAA,IAAI,EAAEI,MAAM,CAACG,OAAhC;AAAyCN,QAAAA,OAAO,EAAE,CAACE,KAAK,CAACF;AAAzD;;AACD,SAAKH,eAAe,CAACU,MAArB;AACC,6CAAYL,KAAZ;AAAmBH,QAAAA,IAAI,EAAE,EAAzB;AAA6BC,QAAAA,OAAO,EAAE,CAACE,KAAK,CAACF;AAA7C;;AACD;AACC,aAAOE,KAAP;AANF;AAQA,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import { userActionTypes } from \"./userActionTypes\";\r\n\r\nconst INITIAL_STATE = { User: {}, LogedIn: false };\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase userActionTypes.setUserLogedIn:\r\n\t\t\treturn { ...state, User: action.payload, LogedIn: !state.LogedIn };\r\n\t\tcase userActionTypes.Logout:\r\n\t\t\treturn { ...state, User: {}, LogedIn: !state.LogedIn };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default userReducer;\r\n"]},"metadata":{},"sourceType":"module"}